// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(HKRPInvoiceContext))]
    [Migration("20230923112709_AddingInitialItems")]
    partial class AddingInitialItems
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EntityContract.Invoice", b =>
                {
                    b.Property<string>("InvoiceNo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerMobNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaymentMode")
                        .HasColumnType("int");

                    b.HasKey("InvoiceNo");

                    b.HasIndex("InvoiceNo")
                        .IsUnique();

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("EntityContract.InvoiceItemMapping", b =>
                {
                    b.Property<string>("InvoiceNo")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnOrder(1);

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnOrder(2);

                    b.Property<int>("ItemQty")
                        .HasColumnType("int");

                    b.HasKey("InvoiceNo", "ItemCode");

                    b.HasIndex("ItemCode");

                    b.ToTable("InvoiceItemMappings");
                });

            modelBuilder.Entity("EntityContract.Item", b =>
                {
                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ItemCode");

                    b.HasIndex("ItemCode")
                        .IsUnique();

                    b.ToTable("Items");
                });

            modelBuilder.Entity("EntityContract.InvoiceItemMapping", b =>
                {
                    b.HasOne("EntityContract.Invoice", "Invoice")
                        .WithMany("InvoiceItemMappings")
                        .HasForeignKey("InvoiceNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityContract.Item", "Item")
                        .WithMany("InvoiceItemMappings")
                        .HasForeignKey("ItemCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Invoice");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("EntityContract.Invoice", b =>
                {
                    b.Navigation("InvoiceItemMappings");
                });

            modelBuilder.Entity("EntityContract.Item", b =>
                {
                    b.Navigation("InvoiceItemMappings");
                });
#pragma warning restore 612, 618
        }
    }
}
